<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Yu-Gi-Oh! Deck Builder</title>
     <link rel="icon" href="/images/deck_favicon.png" type="image/png">

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link rel="stylesheet" type="text/css" href="/styles/main.css">
</head>


<body>
<% if (locals.content){ %>

<div class="container col-xxl-8 px-4 py-5" id="icon-grid">
 <h1> Cards </h1>

<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 g-4 py-5">

<% for (let i = 0; i < content.data.length; i++) { %>
      <% if (content.data[i].card_images && content.data[i].card_images.length > 0) { %>
        <div class="col">
          <div class="card search-result" data-desc="<%= content.data[i].desc %>" data-atk="<%= content.data[i].atk %>" data-def="<%= content.data[i].def %>" data-level="<%= content.data[i].level %>" data-attribute="<%= content.data[i].attribute %>" data-type="<%= content.data[i].type %>" data-id="<%= content.data[i].id %>">
            <img src="<%= content.data[i].card_images[0].image_url_small %>" alt="<%= content.data[i].name %>">
          </div>
        </div>
      <% } %>
    <% } %>

</div>
</div>
<div class="overlay"></div>



<script>

const favoriteDeck = new Set(JSON.parse(localStorage.getItem('favorites') || '[]'));

function addToFavorite(card){
favoriteDeck.add(card);
localStorage.setItem('favorites', JSON.stringify([...favoriteDeck]));
}

document.addEventListener('DOMContentLoaded', () =>{

    const cards = document.querySelectorAll('.search-result');
    const overlay = document.querySelector('.overlay');

    cards.forEach( card =>{
        card.addEventListener( 'click', () => {
            overlay.style.opacity = '1';
            overlay.style.visibility = 'visible';

            const newCardContainer = document.createElement('div');
            newCardContainer.className = "card mb-3 clicked-card";
            newCardContainer.style.maxWidth = '540px';
            desc_container=document.createElement('div');


            const isMonster = card.dataset.type &&  card.dataset.type.includes("Monster");
            const cardHTML=`
            <div class="row g-0">
                <div class="col-md-4">
                  <img src="${card.querySelector('img').src}" class="img-fluid rounded-start" alt="${card.querySelector('img').alt}" >
                </div>
                <div class="col-md-8">
                  <div class="card-body">
                    <h5 class="card-title">${card.querySelector('img').alt}</h5>


                    <p class="card-text"> ${card.dataset.desc} </p>
                    ${ isMonster ? `
                    <p class="card-text"><small class="text-body-secondary" style= "font-weight: bold" >ATK: ${card.dataset.atk}   DEF: ${card.dataset.def} </small></p>
                    <p class="card-text"><small class="text-body-secondary" style= "font-weight: bold" >Level: ${card.dataset.level}  </small></p>
                    <p class="card-text"><small class="text-body-secondary" style= "font-weight: bold" >Attribute: ${card.dataset.attribute} </small></p>
                    `: '' }
                    <button type="button" class="btn btn-secondary add-favorite" style= "border-radius:12%; background-color:#0FCB0F; z-index:1100; ">Add to Favorites</button>
                  </div>
                </div>
              </div>
            `;

            newCardContainer.innerHTML= cardHTML;
            newCardContainer.querySelector('.add-favorite').addEventListener('click', () => {



            const added_card = {
                name: card.querySelector('img').alt,
                desc: card.dataset.desc,
                image: card.querySelector('img').src,
                type: isMonster,
                atk: card.dataset.atk,
                def: card.dataset.def,
                level: card.dataset.level,
                attribute: card.dataset.attribute,
                id: card.dataset.id
            };



            addToFavorite(JSON.stringify(added_card));

        });

        overlay.appendChild(newCardContainer);


        });

    });


    overlay.addEventListener('click', () => {
        overlay.style.opacity = '0';
        overlay.style.visibility = 'hidden';
        overlay.innerHTML = '';
    });

    });
</script>
<% }else{ %>

<h1> Sorry! There are no such cards available. </h1>

<% } %>





<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>